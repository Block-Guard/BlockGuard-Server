name: CI/CD for Spring Boot with Docker

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: application.yml 설정
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml

      - name: Gradle 빌드
        run: ./gradlew clean build -x test

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/blockguard_server .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/blockguard_server:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: EC2에 SSH 접속하여 무중단 배포 수행
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            CURRENT_PORT=$(docker ps --filter "name=blockguard_server_blue" --format "{{.Ports}}" | grep -q "8080" && echo blue || echo green)

            if [ "$CURRENT_PORT" = "blue" ]; then
              NEW_PORT=8081
              NEW_NAME=blockguard_server_green
              OLD_NAME=blockguard_server_blue
            else
              NEW_PORT=8080
              NEW_NAME=blockguard_server_blue
              OLD_NAME=blockguard_server_green
            fi

            echo "새 컨테이너 실행: $NEW_NAME (포트: $NEW_PORT)"
            docker pull ${{ secrets.DOCKER_USERNAME }}/blockguard_server:latest
            docker run -d --name $NEW_NAME -p $NEW_PORT:8080 ${{ secrets.DOCKER_USERNAME }}/blockguard_server:latest

            echo "헬스체크 진행 중..."
            for i in {1..10}; do
              STATUS=$(curl -s http://localhost:$NEW_PORT/actuator/health | grep '"status":"UP"' || true)
              if [ -n "$STATUS" ]; then
                echo "헬스체크 통과"
                break
              else
                echo "⏱ 대기 중..."
                sleep 3
              fi
            done

            if [ -z "$STATUS" ]; then
              echo "헬스체크 실패: 롤백 없음"
              docker logs $NEW_NAME
              exit 1
            fi

            echo "nginx 포트 전환"
            sudo sed -i "s/proxy_pass http:\/\/localhost:808[0-9];/proxy_pass http:\/\/localhost:$NEW_PORT;/" /etc/nginx/sites-available/default
            sudo nginx -s reload

            echo "이전 컨테이너 정리: $OLD_NAME"
            docker stop $OLD_NAME || true
            docker rm $OLD_NAME || true